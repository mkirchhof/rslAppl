ID =  8 
[[1]]
[[1]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[1]]$visible
[1] FALSE


[[2]]
[[2]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[2]]$visible
[1] FALSE


[[3]]
[[3]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[3]]$visible
[1] FALSE


[[4]]
[[4]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[4]]$visible
[1] FALSE


[[5]]
[[5]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[5]]$visible
[1] FALSE


[[6]]
[[6]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[6]]$visible
[1] FALSE


[[7]]
[[7]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[7]]$visible
[1] FALSE


[[8]]
[[8]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[8]]$visible
[1] FALSE


[[9]]
[[9]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[9]]$visible
[1] FALSE


[[10]]
[[10]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[10]]$visible
[1] FALSE


Preprocessing data...
Learning...
Loading required namespace: gRain
2021-03-23 23:16:35 
2021-03-23 23:20:22 
2021-03-23 23:24:07 
2021-03-23 23:27:46 
2021-03-23 23:31:21 
2021-03-23 23:35:16 
2021-03-23 23:38:49 
2021-03-23 23:42:26 
2021-03-23 23:45:57 
2021-03-23 23:49:39 
2021-03-23 23:53:20 
2021-03-23 23:57:12 
2021-03-24 00:00:42 
2021-03-24 00:04:15 
2021-03-24 00:07:48 
2021-03-24 00:11:18 
2021-03-24 00:14:48 
2021-03-24 00:18:30 
2021-03-24 00:22:00 
2021-03-24 00:25:38 
2021-03-24 00:29:14 
2021-03-24 00:33:12 
2021-03-24 00:36:47 
2021-03-24 00:40:35 
2021-03-24 00:44:30 
2021-03-24 00:48:11 
2021-03-24 00:51:48 
2021-03-24 00:55:46 
2021-03-24 00:59:41 
2021-03-24 01:03:32 
2021-03-24 01:07:32 
2021-03-24 01:11:29 
2021-03-24 01:15:29 
2021-03-24 01:19:32 
2021-03-24 01:23:36 
2021-03-24 01:27:28 
2021-03-24 01:31:20 
2021-03-24 01:35:17 
2021-03-24 01:39:15 
2021-03-24 01:43:11 
2021-03-24 01:47:02 
2021-03-24 01:50:55 
2021-03-24 01:54:43 
2021-03-24 01:58:29 
2021-03-24 02:02:22 
2021-03-24 02:06:18 
2021-03-24 02:10:25 
2021-03-24 02:14:22 
2021-03-24 02:18:24 
2021-03-24 02:22:24 
2021-03-24 02:26:13 
2021-03-24 02:29:57 
2021-03-24 02:33:49 
2021-03-24 02:37:38 
2021-03-24 02:41:18 
2021-03-24 02:45:08 
2021-03-24 02:48:44 
2021-03-24 02:52:14 
2021-03-24 02:55:42 
2021-03-24 02:59:13 
2021-03-24 03:02:51 
2021-03-24 03:06:32 
2021-03-24 03:10:05 
2021-03-24 03:13:39 
2021-03-24 03:17:22 
2021-03-24 03:20:59 
2021-03-24 03:24:32 
2021-03-24 03:28:08 
2021-03-24 03:31:45 
2021-03-24 03:35:31 
2021-03-24 03:39:20 
2021-03-24 03:43:16 
2021-03-24 03:47:21 
2021-03-24 03:51:29 
2021-03-24 03:55:35 
2021-03-24 03:59:42 
2021-03-24 04:03:55 
2021-03-24 04:08:15 
2021-03-24 04:12:37 
2021-03-24 04:17:02 
2021-03-24 04:21:37 
2021-03-24 04:26:16 
2021-03-24 04:31:08 
2021-03-24 04:35:55 
2021-03-24 04:40:43 
2021-03-24 04:45:41 
2021-03-24 04:50:26 
2021-03-24 04:55:19 
2021-03-24 05:00:23 
2021-03-24 05:05:36 
2021-03-24 05:10:48 
2021-03-24 05:16:15 
2021-03-24 05:21:33 
2021-03-24 05:27:00 
2021-03-24 05:32:29 
2021-03-24 05:38:07 
2021-03-24 05:43:35 
2021-03-24 05:49:08 
2021-03-24 05:54:45 
2021-03-24 06:00:24 
2021-03-24 06:06:14 
2021-03-24 06:12:11 
2021-03-24 06:18:18 
2021-03-24 06:24:15 
2021-03-24 06:30:08 
2021-03-24 06:35:59 
2021-03-24 06:41:46 
2021-03-24 06:47:44 
2021-03-24 06:53:47 
2021-03-24 07:00:03 
2021-03-24 07:06:22 
2021-03-24 07:12:35 
2021-03-24 07:18:48 
2021-03-24 07:25:16 
2021-03-24 07:31:46 
2021-03-24 07:38:34 
2021-03-24 07:45:23 
2021-03-24 07:52:02 
2021-03-24 07:58:47 
2021-03-24 08:05:41 
2021-03-24 08:12:33 
2021-03-24 08:19:36 
2021-03-24 08:26:36 
2021-03-24 08:33:41 
2021-03-24 08:40:44 
2021-03-24 08:47:56 
2021-03-24 08:55:04 
2021-03-24 09:02:16 
2021-03-24 09:09:29 
2021-03-24 09:16:41 
2021-03-24 09:23:58 
2021-03-24 09:31:16 
2021-03-24 09:38:34 
2021-03-24 09:45:49 
2021-03-24 09:53:12 
2021-03-24 10:00:36 
2021-03-24 10:07:58 
2021-03-24 10:15:26 
2021-03-24 10:22:56 
2021-03-24 10:30:25 
2021-03-24 10:37:56 
2021-03-24 10:45:26 
2021-03-24 10:52:56 
2021-03-24 11:00:31 
2021-03-24 11:07:54 
2021-03-24 11:15:19 
2021-03-24 11:22:39 
2021-03-24 11:30:07 
2021-03-24 11:37:28 
2021-03-24 11:44:53 
2021-03-24 11:52:19 
2021-03-24 11:59:52 
2021-03-24 12:07:23 
2021-03-24 12:14:57 
2021-03-24 12:22:27 
2021-03-24 12:29:54 
2021-03-24 12:37:20 
2021-03-24 12:44:55 
2021-03-24 12:52:32 
2021-03-24 13:00:11 
2021-03-24 13:07:51 
2021-03-24 13:15:19 
2021-03-24 13:22:52 
2021-03-24 13:30:30 
2021-03-24 13:38:04 
2021-03-24 13:45:41 
2021-03-24 13:53:29 
2021-03-24 14:01:08 
2021-03-24 14:08:48 
2021-03-24 14:16:31 
2021-03-24 14:24:14 
2021-03-24 14:31:55 
2021-03-24 14:39:32 
2021-03-24 14:47:08 
2021-03-24 14:54:56 
2021-03-24 15:02:39 
2021-03-24 15:10:12 
2021-03-24 15:17:42 
2021-03-24 15:25:13 
2021-03-24 15:32:51 
2021-03-24 15:40:36 
2021-03-24 15:48:17 
2021-03-24 15:56:02 
2021-03-24 16:03:43 
2021-03-24 16:11:17 
2021-03-24 16:18:46 
2021-03-24 16:26:16 
2021-03-24 16:33:47 
2021-03-24 16:41:20 
2021-03-24 16:48:50 
2021-03-24 16:56:27 
2021-03-24 17:04:08 
2021-03-24 17:11:46 
2021-03-24 17:19:21 
2021-03-24 17:26:57 
2021-03-24 17:34:34 
2021-03-24 17:42:08 
2021-03-24 17:49:38 
2021-03-24 17:57:15 
2021-03-24 18:04:48 
2021-03-24 18:12:25 
2021-03-24 18:19:57 
2021-03-24 18:27:31 
2021-03-24 18:35:08 
2021-03-24 18:42:44 
2021-03-24 18:50:19 
2021-03-24 18:58:00 
2021-03-24 19:05:41 
2021-03-24 19:13:18 
2021-03-24 19:20:57 
2021-03-24 19:28:31 
2021-03-24 19:36:05 
2021-03-24 19:43:46 
2021-03-24 19:51:27 
2021-03-24 19:59:09 
2021-03-24 20:06:46 
2021-03-24 20:14:23 
2021-03-24 20:22:02 
2021-03-24 20:29:46 
2021-03-24 20:37:26 
2021-03-24 20:45:04 
2021-03-24 20:52:34 
2021-03-24 21:00:09 
2021-03-24 21:07:37 
2021-03-24 21:15:17 
2021-03-24 21:22:48 
2021-03-24 21:30:26 
2021-03-24 21:38:07 
2021-03-24 21:45:38 
2021-03-24 21:53:05 
2021-03-24 22:00:42 
2021-03-24 22:08:01 
2021-03-24 22:15:29 
2021-03-24 22:22:46 
2021-03-24 22:30:22 
2021-03-24 22:37:43 
2021-03-24 22:45:28 
2021-03-24 22:52:49 
2021-03-24 23:00:25 
2021-03-24 23:07:52 
2021-03-24 23:15:31 
2021-03-24 23:22:52 
2021-03-24 23:30:38 
2021-03-24 23:37:56 
2021-03-24 23:45:31 
2021-03-24 23:52:56 
2021-03-25 00:00:32 
2021-03-25 00:07:55 
2021-03-25 00:15:34 
2021-03-25 00:22:55 
2021-03-25 00:30:33 
2021-03-25 00:37:46 
2021-03-25 00:45:28 
2021-03-25 00:53:03 
2021-03-25 01:00:20 
2021-03-25 01:07:48 
2021-03-25 01:15:33 
2021-03-25 01:23:10 
2021-03-25 01:30:36 
2021-03-25 01:37:57 
2021-03-25 01:45:23 
2021-03-25 01:52:47 
2021-03-25 02:00:29 
2021-03-25 02:07:54 
2021-03-25 02:15:21 
2021-03-25 02:22:46 
2021-03-25 02:30:13 
2021-03-25 02:37:52 
2021-03-25 02:45:32 
2021-03-25 02:52:52 
2021-03-25 03:00:26 
2021-03-25 03:07:50 
2021-03-25 03:15:15 
2021-03-25 03:22:59 
2021-03-25 03:30:27 
2021-03-25 03:38:08 
2021-03-25 03:45:40 
2021-03-25 03:53:25 
2021-03-25 04:00:50 
2021-03-25 04:08:24 
2021-03-25 04:15:55 
2021-03-25 04:23:32 
2021-03-25 04:31:23 
2021-03-25 04:38:49 
2021-03-25 04:46:43 
2021-03-25 04:53:58 
2021-03-25 05:01:34 
2021-03-25 05:08:52 
2021-03-25 05:16:26 
2021-03-25 05:23:52 
2021-03-25 05:31:10 
2021-03-25 05:38:50 
2021-03-25 05:46:30 
2021-03-25 05:54:02 
2021-03-25 06:01:46 
2021-03-25 06:09:21 
2021-03-25 06:16:41 
2021-03-25 06:24:11 
2021-03-25 06:31:54 
2021-03-25 06:39:22 
2021-03-25 06:46:39 
2021-03-25 06:54:26 
2021-03-25 07:01:58 
2021-03-25 07:09:17 
2021-03-25 07:16:52 
2021-03-25 07:24:14 
2021-03-25 07:31:39 
2021-03-25 07:38:57 
2021-03-25 07:46:39 
2021-03-25 07:54:00 
2021-03-25 08:01:41 
2021-03-25 08:08:58 
2021-03-25 08:16:42 
2021-03-25 08:24:26 
2021-03-25 08:32:26 
2021-03-25 08:39:51 
2021-03-25 08:47:25 
2021-03-25 08:54:53 
2021-03-25 09:02:23 
2021-03-25 09:09:56 
2021-03-25 09:17:28 
2021-03-25 09:25:05 
2021-03-25 09:32:35 
2021-03-25 09:40:07 
2021-03-25 09:47:41 
2021-03-25 09:55:19 
2021-03-25 10:02:53 
2021-03-25 10:10:27 
2021-03-25 10:18:00 
2021-03-25 10:25:32 
2021-03-25 10:33:05 
2021-03-25 10:40:42 
2021-03-25 10:48:17 
2021-03-25 10:55:58 
2021-03-25 11:03:37 
2021-03-25 11:11:13 
2021-03-25 11:18:50 
2021-03-25 11:26:26 
2021-03-25 11:34:00 
2021-03-25 11:41:40 
2021-03-25 11:49:22 
2021-03-25 11:57:02 
2021-03-25 12:04:41 
2021-03-25 12:12:19 
2021-03-25 12:20:00 
2021-03-25 12:27:40 
2021-03-25 12:35:23 
2021-03-25 12:43:05 
2021-03-25 12:50:44 
2021-03-25 12:58:21 
2021-03-25 13:05:57 
2021-03-25 13:13:36 
2021-03-25 13:21:19 
2021-03-25 13:28:58 
2021-03-25 13:36:40 
2021-03-25 13:44:14 
2021-03-25 13:51:51 
2021-03-25 13:59:26 
2021-03-25 14:06:55 
2021-03-25 14:14:28 
2021-03-25 14:21:59 
2021-03-25 14:29:32 
2021-03-25 14:37:06 
2021-03-25 14:44:46 
2021-03-25 14:52:18 
2021-03-25 14:59:44 
2021-03-25 15:07:16 
2021-03-25 15:14:41 
2021-03-25 15:22:15 
2021-03-25 15:29:53 
2021-03-25 15:37:24 
2021-03-25 15:45:02 
2021-03-25 15:52:37 
2021-03-25 16:00:10 
2021-03-25 16:07:47 
2021-03-25 16:15:21 
2021-03-25 16:22:57 
2021-03-25 16:30:30 
2021-03-25 16:38:08 
2021-03-25 16:45:49 
2021-03-25 16:53:25 
2021-03-25 17:00:54 
2021-03-25 17:08:29 
2021-03-25 17:16:08 
2021-03-25 17:23:40 
2021-03-25 17:31:15 
2021-03-25 17:38:59 
2021-03-25 17:46:39 
2021-03-25 17:54:23 
2021-03-25 18:01:55 
2021-03-25 18:09:27 
2021-03-25 18:17:06 
2021-03-25 18:24:33 
2021-03-25 18:32:07 
2021-03-25 18:39:43 
2021-03-25 18:47:22 
2021-03-25 18:54:56 
2021-03-25 19:02:33 
2021-03-25 19:10:11 
2021-03-25 19:17:54 
Reached maxHours without converging.
Predicting on val...
Predicting on test...
