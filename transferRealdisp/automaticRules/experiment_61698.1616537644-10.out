ID =  10 
[[1]]
[[1]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[1]]$visible
[1] FALSE


[[2]]
[[2]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[2]]$visible
[1] FALSE


[[3]]
[[3]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[3]]$visible
[1] FALSE


[[4]]
[[4]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[4]]$visible
[1] FALSE


[[5]]
[[5]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[5]]$visible
[1] FALSE


[[6]]
[[6]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[6]]$visible
[1] FALSE


[[7]]
[[7]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[7]]$visible
[1] FALSE


[[8]]
[[8]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[8]]$visible
[1] FALSE


[[9]]
[[9]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[9]]$visible
[1] FALSE


[[10]]
[[10]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[10]]$visible
[1] FALSE


Preprocessing data...
Learning...
Loading required namespace: gRain
2021-03-23 23:17:38 
2021-03-23 23:22:32 
2021-03-23 23:27:42 
2021-03-23 23:33:01 
2021-03-23 23:38:02 
2021-03-23 23:43:01 
2021-03-23 23:47:57 
2021-03-23 23:52:47 
2021-03-23 23:57:57 
2021-03-24 00:03:08 
2021-03-24 00:08:04 
2021-03-24 00:12:52 
2021-03-24 00:17:37 
2021-03-24 00:22:24 
2021-03-24 00:27:14 
2021-03-24 00:32:05 
2021-03-24 00:37:03 
2021-03-24 00:41:59 
2021-03-24 00:46:56 
2021-03-24 00:51:45 
2021-03-24 00:56:40 
2021-03-24 01:01:46 
2021-03-24 01:06:59 
2021-03-24 01:12:13 
2021-03-24 01:17:09 
2021-03-24 01:22:27 
2021-03-24 01:27:29 
2021-03-24 01:32:56 
2021-03-24 01:38:10 
2021-03-24 01:43:12 
2021-03-24 01:48:24 
2021-03-24 01:53:48 
2021-03-24 01:59:17 
2021-03-24 02:04:35 
2021-03-24 02:09:57 
2021-03-24 02:15:25 
2021-03-24 02:20:45 
2021-03-24 02:26:02 
2021-03-24 02:31:43 
2021-03-24 02:37:08 
2021-03-24 02:42:33 
2021-03-24 02:47:58 
2021-03-24 02:53:27 
2021-03-24 02:59:01 
2021-03-24 03:04:36 
2021-03-24 03:09:58 
2021-03-24 03:15:15 
2021-03-24 03:20:27 
2021-03-24 03:25:39 
2021-03-24 03:30:55 
2021-03-24 03:36:01 
2021-03-24 03:41:04 
2021-03-24 03:46:02 
2021-03-24 03:51:09 
2021-03-24 03:56:18 
2021-03-24 04:01:16 
2021-03-24 04:06:20 
2021-03-24 04:11:06 
2021-03-24 04:15:52 
2021-03-24 04:20:38 
2021-03-24 04:25:34 
2021-03-24 04:30:29 
2021-03-24 04:35:45 
2021-03-24 04:40:51 
2021-03-24 04:45:57 
2021-03-24 04:50:56 
2021-03-24 04:56:08 
2021-03-24 05:01:43 
2021-03-24 05:07:57 
2021-03-24 05:13:34 
2021-03-24 05:19:11 
2021-03-24 05:25:24 
2021-03-24 05:31:08 
2021-03-24 05:37:01 
2021-03-24 05:42:31 
2021-03-24 05:48:29 
2021-03-24 05:54:34 
2021-03-24 06:00:45 
2021-03-24 06:07:11 
2021-03-24 06:13:33 
2021-03-24 06:19:50 
2021-03-24 06:25:53 
2021-03-24 06:32:21 
2021-03-24 06:38:29 
2021-03-24 06:44:26 
2021-03-24 06:50:36 
2021-03-24 06:56:47 
2021-03-24 07:03:23 
2021-03-24 07:10:18 
2021-03-24 07:17:14 
2021-03-24 07:24:44 
2021-03-24 07:31:55 
2021-03-24 07:40:14 
2021-03-24 07:48:11 
2021-03-24 07:56:01 
2021-03-24 08:03:40 
2021-03-24 08:11:17 
2021-03-24 08:19:34 
2021-03-24 08:27:53 
2021-03-24 08:36:18 
2021-03-24 08:44:42 
2021-03-24 08:53:09 
2021-03-24 09:01:27 
2021-03-24 09:09:11 
2021-03-24 09:16:46 
2021-03-24 09:25:02 
2021-03-24 09:32:58 
2021-03-24 09:41:14 
2021-03-24 09:49:47 
2021-03-24 09:58:15 
2021-03-24 10:07:14 
2021-03-24 10:16:12 
2021-03-24 10:24:47 
2021-03-24 10:33:22 
2021-03-24 10:42:44 
2021-03-24 10:52:14 
2021-03-24 11:01:55 
2021-03-24 11:10:55 
2021-03-24 11:19:52 
2021-03-24 11:28:50 
2021-03-24 11:38:02 
2021-03-24 11:47:10 
2021-03-24 11:56:11 
2021-03-24 12:05:08 
2021-03-24 12:14:05 
2021-03-24 12:23:09 
2021-03-24 12:32:17 
2021-03-24 12:41:48 
2021-03-24 12:50:37 
2021-03-24 12:59:36 
2021-03-24 13:08:38 
2021-03-24 13:17:47 
2021-03-24 13:26:51 
2021-03-24 13:36:39 
2021-03-24 13:46:33 
2021-03-24 13:56:30 
2021-03-24 14:06:43 
2021-03-24 14:16:21 
2021-03-24 14:26:17 
2021-03-24 14:35:46 
2021-03-24 14:45:08 
2021-03-24 14:55:05 
2021-03-24 15:04:55 
2021-03-24 15:14:57 
2021-03-24 15:25:08 
2021-03-24 15:35:21 
2021-03-24 15:45:22 
2021-03-24 15:55:03 
2021-03-24 16:04:51 
2021-03-24 16:14:51 
2021-03-24 16:25:02 
2021-03-24 16:35:21 
2021-03-24 16:45:49 
2021-03-24 16:55:50 
2021-03-24 17:06:09 
2021-03-24 17:16:11 
2021-03-24 17:26:18 
2021-03-24 17:36:18 
2021-03-24 17:46:17 
2021-03-24 17:56:53 
2021-03-24 18:07:30 
2021-03-24 18:18:09 
2021-03-24 18:28:23 
2021-03-24 18:38:56 
2021-03-24 18:49:29 
2021-03-24 19:00:04 
2021-03-24 19:10:38 
2021-03-24 19:21:08 
2021-03-24 19:31:41 
2021-03-24 19:42:13 
2021-03-24 19:52:46 
2021-03-24 20:03:14 
2021-03-24 20:13:54 
2021-03-24 20:24:19 
2021-03-24 20:34:38 
2021-03-24 20:45:12 
2021-03-24 20:55:32 
2021-03-24 21:06:02 
2021-03-24 21:16:36 
2021-03-24 21:27:12 
2021-03-24 21:37:34 
2021-03-24 21:48:14 
2021-03-24 21:58:34 
2021-03-24 22:09:08 
2021-03-24 22:19:54 
2021-03-24 22:30:21 
2021-03-24 22:40:45 
2021-03-24 22:51:25 
2021-03-24 23:01:58 
2021-03-24 23:12:14 
2021-03-24 23:22:46 
2021-03-24 23:33:15 
2021-03-24 23:43:48 
2021-03-24 23:54:27 
2021-03-25 00:04:51 
2021-03-25 00:15:20 
2021-03-25 00:25:56 
2021-03-25 00:36:25 
2021-03-25 00:46:58 
2021-03-25 00:57:27 
2021-03-25 01:07:58 
2021-03-25 01:18:24 
2021-03-25 01:28:42 
2021-03-25 01:39:30 
2021-03-25 01:49:51 
2021-03-25 02:00:40 
2021-03-25 02:11:18 
2021-03-25 02:21:53 
2021-03-25 02:32:28 
2021-03-25 02:43:22 
2021-03-25 02:54:15 
2021-03-25 03:04:53 
2021-03-25 03:15:43 
2021-03-25 03:26:07 
2021-03-25 03:36:40 
2021-03-25 03:47:32 
2021-03-25 03:58:20 
2021-03-25 04:08:56 
2021-03-25 04:19:25 
2021-03-25 04:30:01 
2021-03-25 04:40:40 
2021-03-25 04:51:16 
2021-03-25 05:01:46 
2021-03-25 05:12:25 
2021-03-25 05:23:04 
2021-03-25 05:33:42 
2021-03-25 05:44:22 
2021-03-25 05:55:18 
2021-03-25 06:05:41 
2021-03-25 06:16:06 
2021-03-25 06:26:43 
2021-03-25 06:37:17 
2021-03-25 06:47:17 
2021-03-25 06:57:53 
2021-03-25 07:08:01 
2021-03-25 07:18:15 
2021-03-25 07:28:19 
2021-03-25 07:38:20 
2021-03-25 07:48:24 
2021-03-25 07:58:25 
2021-03-25 08:09:02 
2021-03-25 08:19:04 
2021-03-25 08:29:28 
2021-03-25 08:39:51 
2021-03-25 08:50:30 
2021-03-25 09:00:52 
2021-03-25 09:10:52 
2021-03-25 09:20:57 
2021-03-25 09:30:58 
2021-03-25 09:41:33 
2021-03-25 09:52:09 
2021-03-25 10:02:06 
2021-03-25 10:12:05 
2021-03-25 10:22:40 
2021-03-25 10:32:44 
2021-03-25 10:43:20 
2021-03-25 10:53:39 
2021-03-25 11:03:44 
2021-03-25 11:14:10 
2021-03-25 11:24:15 
2021-03-25 11:34:46 
2021-03-25 11:45:04 
2021-03-25 11:55:06 
2021-03-25 12:05:29 
2021-03-25 12:15:32 
2021-03-25 12:25:52 
2021-03-25 12:35:56 
2021-03-25 12:46:05 
2021-03-25 12:56:19 
2021-03-25 13:06:22 
2021-03-25 13:16:45 
2021-03-25 13:27:19 
2021-03-25 13:37:28 
2021-03-25 13:47:37 
2021-03-25 13:57:53 
2021-03-25 14:08:00 
2021-03-25 14:18:13 
2021-03-25 14:28:18 
2021-03-25 14:38:21 
2021-03-25 14:48:25 
2021-03-25 14:58:37 
2021-03-25 15:08:46 
2021-03-25 15:19:20 
2021-03-25 15:29:52 
2021-03-25 15:40:26 
2021-03-25 15:50:33 
2021-03-25 16:00:44 
2021-03-25 16:10:50 
2021-03-25 16:20:58 
2021-03-25 16:31:15 
2021-03-25 16:41:32 
2021-03-25 16:51:55 
2021-03-25 17:02:16 
2021-03-25 17:12:26 
2021-03-25 17:22:45 
2021-03-25 17:33:10 
2021-03-25 17:43:32 
2021-03-25 17:53:58 
2021-03-25 18:04:10 
2021-03-25 18:14:23 
2021-03-25 18:24:31 
2021-03-25 18:34:58 
2021-03-25 18:45:41 
2021-03-25 18:56:04 
2021-03-25 19:06:18 
2021-03-25 19:16:24 
Reached maxHours without converging.
Predicting on val...
Predicting on test...
slurmstepd: error: *** JOB 14902526 ON cstd01-132 CANCELLED AT 2021-03-25T23:13:19 DUE TO TIME LIMIT ***
