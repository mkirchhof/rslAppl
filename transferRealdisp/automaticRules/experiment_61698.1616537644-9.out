ID =  9 
[[1]]
[[1]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[1]]$visible
[1] FALSE


[[2]]
[[2]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[2]]$visible
[1] FALSE


[[3]]
[[3]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[3]]$visible
[1] FALSE


[[4]]
[[4]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[4]]$visible
[1] FALSE


[[5]]
[[5]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[5]]$visible
[1] FALSE


[[6]]
[[6]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[6]]$visible
[1] FALSE


[[7]]
[[7]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[7]]$visible
[1] FALSE


[[8]]
[[8]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[8]]$visible
[1] FALSE


[[9]]
[[9]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[9]]$visible
[1] FALSE


[[10]]
[[10]]$value
function (rsl, n, outputClassifiers = TRUE, outputLabels = TRUE, 
    outputRules = TRUE) 
{
    rsl <- .compile(rsl)
    data <- gRain::simulate.grain(rsl$compiledNet, n)
    outputVars <- character(0)
    if (outputClassifiers) 
        outputVars <- c(outputVars, .getAllClassifiers(rsl))
    if (outputLabels) 
        outputVars <- c(outputVars, .getAllLabelNodes(rsl))
    if (outputRules) 
        outputVars <- c(outputVars, .getAllRules(rsl))
    data <- data[, outputVars]
    data <- .colnamesIDtoNames(rsl, data)
    data[] <- lapply(data, as.character)
    return(data)
}

[[10]]$visible
[1] FALSE


Preprocessing data...
Learning...
Loading required namespace: gRain
2021-03-23 23:16:58 
2021-03-23 23:20:56 
2021-03-23 23:24:56 
2021-03-23 23:29:21 
2021-03-23 23:33:36 
2021-03-23 23:37:58 
2021-03-23 23:42:23 
2021-03-23 23:46:21 
2021-03-23 23:50:43 
2021-03-23 23:54:54 
2021-03-23 23:59:17 
2021-03-24 00:03:43 
2021-03-24 00:08:00 
2021-03-24 00:12:05 
2021-03-24 00:16:20 
2021-03-24 00:20:32 
2021-03-24 00:24:47 
2021-03-24 00:29:04 
2021-03-24 00:32:57 
2021-03-24 00:36:53 
2021-03-24 00:41:20 
2021-03-24 00:45:41 
2021-03-24 00:50:06 
2021-03-24 00:54:27 
2021-03-24 00:58:32 
2021-03-24 01:02:55 
2021-03-24 01:07:19 
2021-03-24 01:11:26 
2021-03-24 01:15:43 
2021-03-24 01:20:03 
2021-03-24 01:24:31 
2021-03-24 01:28:46 
2021-03-24 01:32:59 
2021-03-24 01:37:15 
2021-03-24 01:41:31 
2021-03-24 01:46:16 
2021-03-24 01:50:50 
2021-03-24 01:55:41 
2021-03-24 02:00:03 
2021-03-24 02:04:55 
2021-03-24 02:09:37 
2021-03-24 02:13:57 
2021-03-24 02:18:37 
2021-03-24 02:22:55 
2021-03-24 02:27:11 
2021-03-24 02:31:20 
2021-03-24 02:35:46 
2021-03-24 02:40:05 
2021-03-24 02:44:40 
2021-03-24 02:48:50 
2021-03-24 02:53:26 
2021-03-24 02:57:42 
2021-03-24 03:01:31 
2021-03-24 03:05:35 
2021-03-24 03:09:43 
2021-03-24 03:13:55 
2021-03-24 03:17:57 
2021-03-24 03:21:49 
2021-03-24 03:26:06 
2021-03-24 03:30:17 
2021-03-24 03:34:38 
2021-03-24 03:38:56 
2021-03-24 03:42:58 
2021-03-24 03:47:11 
2021-03-24 03:51:32 
2021-03-24 03:55:47 
2021-03-24 04:00:26 
2021-03-24 04:05:03 
2021-03-24 04:09:33 
2021-03-24 04:14:13 
2021-03-24 04:18:39 
2021-03-24 04:23:25 
2021-03-24 04:27:52 
2021-03-24 04:32:29 
2021-03-24 04:37:24 
2021-03-24 04:41:52 
2021-03-24 04:46:50 
2021-03-24 04:52:01 
2021-03-24 04:57:28 
2021-03-24 05:03:02 
2021-03-24 05:08:22 
2021-03-24 05:13:42 
2021-03-24 05:19:02 
2021-03-24 05:23:55 
2021-03-24 05:29:19 
2021-03-24 05:34:42 
2021-03-24 05:40:14 
2021-03-24 05:45:48 
2021-03-24 05:51:20 
2021-03-24 05:56:35 
2021-03-24 06:01:57 
2021-03-24 06:07:55 
2021-03-24 06:13:37 
2021-03-24 06:19:40 
2021-03-24 06:25:40 
2021-03-24 06:31:59 
2021-03-24 06:38:12 
2021-03-24 06:44:42 
2021-03-24 06:51:00 
2021-03-24 06:57:10 
2021-03-24 07:03:35 
2021-03-24 07:10:27 
2021-03-24 07:16:40 
2021-03-24 07:23:01 
2021-03-24 07:29:31 
2021-03-24 07:35:58 
2021-03-24 07:43:10 
2021-03-24 07:50:00 
2021-03-24 07:56:50 
2021-03-24 08:03:53 
2021-03-24 08:10:57 
2021-03-24 08:17:57 
2021-03-24 08:24:59 
2021-03-24 08:32:25 
2021-03-24 08:39:14 
2021-03-24 08:46:15 
2021-03-24 08:53:22 
2021-03-24 09:01:03 
2021-03-24 09:08:41 
2021-03-24 09:16:19 
2021-03-24 09:23:45 
2021-03-24 09:31:12 
2021-03-24 09:38:44 
2021-03-24 09:45:58 
2021-03-24 09:53:28 
2021-03-24 10:00:52 
2021-03-24 10:08:17 
2021-03-24 10:15:36 
2021-03-24 10:22:45 
2021-03-24 10:30:02 
2021-03-24 10:37:43 
2021-03-24 10:45:34 
2021-03-24 10:52:51 
2021-03-24 11:00:40 
2021-03-24 11:08:27 
2021-03-24 11:16:00 
2021-03-24 11:23:47 
2021-03-24 11:31:25 
2021-03-24 11:39:08 
2021-03-24 11:46:55 
2021-03-24 11:54:44 
2021-03-24 12:02:34 
2021-03-24 12:10:43 
2021-03-24 12:18:29 
2021-03-24 12:26:27 
2021-03-24 12:34:21 
2021-03-24 12:42:38 
2021-03-24 12:50:37 
2021-03-24 12:58:34 
2021-03-24 13:06:37 
2021-03-24 13:14:35 
2021-03-24 13:22:44 
2021-03-24 13:31:11 
2021-03-24 13:39:08 
2021-03-24 13:47:01 
2021-03-24 13:54:53 
2021-03-24 14:02:51 
2021-03-24 14:10:52 
2021-03-24 14:19:01 
2021-03-24 14:27:02 
2021-03-24 14:35:08 
2021-03-24 14:43:04 
2021-03-24 14:51:40 
2021-03-24 14:59:45 
2021-03-24 15:07:49 
2021-03-24 15:16:11 
2021-03-24 15:24:51 
2021-03-24 15:33:29 
2021-03-24 15:42:02 
2021-03-24 15:50:38 
2021-03-24 15:59:09 
2021-03-24 16:08:06 
2021-03-24 16:16:54 
2021-03-24 16:25:30 
2021-03-24 16:33:55 
2021-03-24 16:42:42 
2021-03-24 16:51:14 
2021-03-24 16:59:26 
2021-03-24 17:08:01 
2021-03-24 17:16:26 
2021-03-24 17:25:04 
2021-03-24 17:33:38 
2021-03-24 17:42:06 
2021-03-24 17:50:35 
2021-03-24 17:59:22 
2021-03-24 18:07:46 
2021-03-24 18:16:08 
2021-03-24 18:24:45 
2021-03-24 18:33:40 
2021-03-24 18:42:38 
2021-03-24 18:51:17 
2021-03-24 18:59:53 
2021-03-24 19:08:23 
2021-03-24 19:17:17 
2021-03-24 19:26:01 
2021-03-24 19:34:46 
2021-03-24 19:43:26 
2021-03-24 19:52:07 
2021-03-24 20:00:39 
2021-03-24 20:09:08 
2021-03-24 20:17:49 
2021-03-24 20:26:50 
2021-03-24 20:35:37 
2021-03-24 20:44:14 
2021-03-24 20:53:01 
2021-03-24 21:01:39 
2021-03-24 21:10:27 
2021-03-24 21:19:07 
2021-03-24 21:27:57 
2021-03-24 21:36:38 
2021-03-24 21:45:13 
2021-03-24 21:53:53 
2021-03-24 22:02:30 
2021-03-24 22:11:32 
2021-03-24 22:20:03 
2021-03-24 22:28:23 
2021-03-24 22:36:56 
2021-03-24 22:45:31 
2021-03-24 22:54:04 
2021-03-24 23:02:30 
2021-03-24 23:11:07 
2021-03-24 23:19:59 
2021-03-24 23:28:55 
2021-03-24 23:37:43 
2021-03-24 23:46:27 
2021-03-24 23:55:13 
2021-03-25 00:03:44 
2021-03-25 00:12:45 
2021-03-25 00:21:24 
2021-03-25 00:30:12 
2021-03-25 00:39:03 
2021-03-25 00:47:51 
2021-03-25 00:56:28 
2021-03-25 01:05:11 
2021-03-25 01:14:06 
2021-03-25 01:22:53 
2021-03-25 01:31:42 
2021-03-25 01:40:24 
2021-03-25 01:49:22 
2021-03-25 01:58:16 
2021-03-25 02:07:09 
2021-03-25 02:15:49 
2021-03-25 02:24:32 
2021-03-25 02:33:47 
2021-03-25 02:42:29 
2021-03-25 02:51:09 
2021-03-25 03:00:07 
2021-03-25 03:09:00 
2021-03-25 03:17:53 
2021-03-25 03:26:51 
2021-03-25 03:35:26 
2021-03-25 03:44:15 
2021-03-25 03:53:21 
2021-03-25 04:02:08 
2021-03-25 04:11:09 
2021-03-25 04:19:47 
2021-03-25 04:28:38 
2021-03-25 04:37:27 
2021-03-25 04:45:51 
2021-03-25 04:54:46 
2021-03-25 05:03:50 
2021-03-25 05:12:42 
2021-03-25 05:21:46 
2021-03-25 05:30:22 
2021-03-25 05:39:20 
2021-03-25 05:47:57 
2021-03-25 05:56:58 
2021-03-25 06:05:28 
2021-03-25 06:14:01 
2021-03-25 06:22:31 
2021-03-25 06:31:11 
2021-03-25 06:39:19 
2021-03-25 06:47:43 
2021-03-25 06:55:48 
2021-03-25 07:04:13 
2021-03-25 07:12:21 
2021-03-25 07:20:51 
2021-03-25 07:29:05 
2021-03-25 07:37:14 
2021-03-25 07:45:43 
2021-03-25 07:54:04 
2021-03-25 08:02:22 
2021-03-25 08:10:53 
2021-03-25 08:19:01 
2021-03-25 08:27:47 
2021-03-25 08:36:03 
2021-03-25 08:44:53 
2021-03-25 08:53:11 
2021-03-25 09:01:49 
2021-03-25 09:10:17 
2021-03-25 09:18:34 
2021-03-25 09:27:00 
2021-03-25 09:35:13 
2021-03-25 09:43:52 
2021-03-25 09:52:11 
2021-03-25 10:00:48 
2021-03-25 10:09:31 
2021-03-25 10:17:58 
2021-03-25 10:26:11 
2021-03-25 10:35:05 
2021-03-25 10:43:40 
2021-03-25 10:52:18 
2021-03-25 11:00:47 
2021-03-25 11:09:08 
2021-03-25 11:17:49 
2021-03-25 11:26:05 
2021-03-25 11:34:30 
2021-03-25 11:43:29 
2021-03-25 11:51:56 
2021-03-25 12:00:35 
2021-03-25 12:09:12 
2021-03-25 12:18:07 
2021-03-25 12:26:45 
2021-03-25 12:35:04 
2021-03-25 12:43:49 
2021-03-25 12:52:15 
2021-03-25 13:00:44 
2021-03-25 13:09:34 
2021-03-25 13:18:23 
2021-03-25 13:26:50 
2021-03-25 13:35:10 
2021-03-25 13:43:45 
2021-03-25 13:51:59 
2021-03-25 14:00:14 
2021-03-25 14:08:51 
2021-03-25 14:17:32 
2021-03-25 14:26:17 
2021-03-25 14:35:07 
2021-03-25 14:43:48 
2021-03-25 14:52:07 
2021-03-25 15:01:11 
2021-03-25 15:09:30 
2021-03-25 15:17:50 
2021-03-25 15:26:04 
2021-03-25 15:34:48 
2021-03-25 15:43:35 
2021-03-25 15:51:55 
2021-03-25 16:00:36 
2021-03-25 16:09:06 
2021-03-25 16:17:22 
2021-03-25 16:25:42 
2021-03-25 16:34:09 
2021-03-25 16:42:45 
2021-03-25 16:51:10 
2021-03-25 16:59:55 
2021-03-25 17:08:54 
2021-03-25 17:17:13 
2021-03-25 17:25:46 
2021-03-25 17:34:06 
2021-03-25 17:42:57 
2021-03-25 17:51:13 
2021-03-25 17:59:37 
2021-03-25 18:08:02 
2021-03-25 18:16:43 
2021-03-25 18:25:05 
2021-03-25 18:33:45 
2021-03-25 18:42:10 
2021-03-25 18:50:48 
2021-03-25 18:59:37 
2021-03-25 19:07:55 
2021-03-25 19:16:12 
Reached maxHours without converging.
Predicting on val...
Predicting on test...
slurmstepd: error: *** JOB 14902525 ON cstd01-128 CANCELLED AT 2021-03-25T23:13:19 DUE TO TIME LIMIT ***
